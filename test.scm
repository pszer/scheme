(define (smallest-divisor n)
	(define (divides? a b) (= (remainder b a) 0))
	(define (next n)
		(if (= 2 n) 3 (+ 2 n)))
	(define (find-divisor n test)
		(cond ((> (* test test) n) n)
		      ((divides? test n) test)
		      (else (find-divisor n (next test)))))
	(find-divisor n 2))
(define (prime? n) (= n (smallest-divisor n)))

(define (not n) (if n #f #t))

(define (get-primes a b)
	(define (iter i result)
		(cond ((> i b) result)
		      ((prime? i) (iter (+ i 1) (cons i result)))
		      (else (iter (+ i 1) result))))
	(iter a '()))
